[tool.poetry]
authors = ["Eliot Courtney <edgeworth.dev@gmail.com>"]
classifiers = ["License :: OSI Approved :: GPL-3.0-only"]
description = "memerna"
name = "memerna"
readme = "README.md"
version = "0.1.0"

[tool.poetry.dependencies]
bidict = "^0.22.1"
click = "^8.1.7"
click-params = "^0.4.1"
click_log = "^0.4.0"
cloup = "^3.0.2"
libtmux = "^0.23.2"
pandas = "^2.1.2"
protobuf = "3.20.1"
python = "~3.11"
python-dotenv = "^1.0.0"
ray = "^2.8.0"
scipy = "^1.11.3"
seaborn = "^0.13.0"
statsmodels = "^0.14.0"
torch = "^2.1.0"
torch-tb-profiler = "^0.4.1"
viennarna = "^2.6.4"

[tool.poetry.dev-dependencies]
mypy = "^1.6.1"
poetry-plugin-up = "^0.4.0"

[tool.mypy]
show_column_numbers = true
# Require type hints
disallow_untyped_defs = true

# Allow types that is not imported to be used in annotations.
# This is necessary because some libraries don't have annotations.
disallow_any_unimported = false

# Disallow implicit optional e.g. arg: str = None
no_implicit_optional = true

# Check bodies of functions without type annotations too
check_untyped_defs = true

# Warn about returning Any from a function annotated to not return it
warn_return_any = true

# Warn about unused ignore annotations
warn_unused_ignores = true

# Show error codes
show_error_codes = true

# Set python version.
python_version = '3.11'

# No type hints for torchvision.
[[tool.mypy.overrides]]
ignore_missing_imports = true
module = [
  "torchvision.*",
  "torchtext.*",
  "click_log.*",
  "numpy.*",
  "ViennaRNA.*",
  "pandas.*",
  "matplotlib.*",
  "seaborn.*",
  "statsmodels.*",
  "click_params.*",
  "scipy.*",
]

[tool.ruff]
line-length = 100
target-version = "py311"

[tool.ruff.format]
# Make sure lists etc can go back onto one line if they get shorter.
skip-magic-trailing-comma = true

[tool.ruff.lint]
ignore = [
  "ANN101", # no need to annotate self
  "ANN401", # allow Any type annotation
  "C901", # ignore too complex code
  "COM812", # allow missing trailing comma
  "D", # ignore docstring stuff
  "DTZ005", # allow naive datetime objects
  "EM101", # allow exceptions with string arguments
  "EM102", # allow f-string in exception
  "ERA001", # allow commented out code
  "FBT001", # allow boolean position arg in functions
  "FBT002", # allow boolean position arg in functions
  "G004", # allow f-string in logs, just be careful if performance matters
  "ISC001", # avoid conflict with formatter
  "PD002", # allow pandas in place operations
  "PD901", # allow 'df'
  "PLR0912", # allow more branches in functions
  "S311", # remove cryptographic random gen false positives
  "T201", # allow print statements
  "TRY003", # allow exceptions with string arguments
]
select = ["ALL"]

[tool.ruff.isort]
# To be consistent with skip-magic-trailing-comma = true
split-on-trailing-comma = false
