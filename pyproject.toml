[project]
authors = [{name = "Eliot Courtney", email = "edgeworth.dev@gmail.com"}]
description = "memerna"
dynamic = ["dependencies"]
license = {text = "GPL-3.0-only"}
name = "rnapy"
requires-python = ">=3.13,<4.0"
version = "0.2.0"

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=1.0.0"]

[tool.poetry]
packages = [{include = "rnapy"}]

[tool.poetry.dependencies]
click = ">=8.2.1"
click-params = ">=0.5.0"
click_log = ">=0.4.0"
cloup = ">=3.0.8"
libtmux = ">=0.46.2"
polars = ">=1.32.2"
python-dotenv = ">=1.1.1"

[tool.poetry.group.dev.dependencies]
mypy = ">=1.17.1"
poetry-plugin-up = ">=0.9.0"

[tool.mypy]
show_column_numbers = true
# Require type hints
disallow_untyped_defs = true

# Allow types that is not imported to be used in annotations.
# This is necessary because some libraries don't have annotations.
disallow_any_unimported = false

# Disallow implicit optional e.g. arg: str = None
no_implicit_optional = true

# Check bodies of functions without type annotations too
check_untyped_defs = true

# Warn about returning Any from a function annotated to not return it
warn_return_any = true

# Warn about unused ignore annotations
warn_unused_ignores = true

# Show error codes
show_error_codes = true

# Set python version.
python_version = '3.13'

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = [
  "click_log.*",
  "click_params.*",
]

[tool.ruff]
line-length = 100
target-version = "py313"

[tool.ruff.format]
# Make sure lists etc can go back onto one line if they get shorter.
skip-magic-trailing-comma = true

[tool.ruff.lint]
ignore = [
  "A003", # allow attribute shadowing builtins 'eval', 'sorted' etc
  "ANN401", # allow Any type annotation
  "BLE001", # allow except Exception
  "C901", # ignore too complex code
  "COM812", # allow missing trailing comma
  "D", # ignore docstring stuff
  "DTZ005", # allow naive datetime objects
  "EM101", # allow exceptions with string arguments
  "EM102", # allow f-string in exception
  "ERA001", # allow commented out code
  "FBT001", # allow boolean position arg in functions
  "FBT002", # allow boolean position arg in functions
  "FBT003", # allow boolean position arg in functions
  "FIX", # no notes on FIXME, TODO, etc
  "G004", # allow f-string in logs, just be careful if performance matters
  "ISC001", # avoid conflict with formatter
  "N803", # allow uppercase variables
  "N806", # allow uppercase variables
  "N812", # allow e.g. import torch.nn.functional as F
  "PD002", # allow pandas in place operations
  "PD901", # allow 'df'
  "PLR0912", # allow more branches in functions
  "PLR0913", # allow more arguments in functions
  "PLR0915", # allow more statements in functions
  "PLR2004", # allow magic numbers
  "PYI021", # allow docstrings in stubs
  "RET504", # allow return statements after assignment of variable
  "S101", # allow asserts
  "S311", # remove cryptographic random gen false positives
  "S324", # allow md5
  "S603", # false positives on subprocess sanitising
  "S605", # allow starting process via shell
  "S608", # allow interpolated SQL (be careful)
  "T201", # allow print statements
  "TCH", # don't use type-checking import blocks
  "TD", # no TODO related warnings
  "TRY003", # allow exceptions with string arguments
  "PLR0911", # allow more returns in functions
]
select = ["ALL"]

[tool.ruff.lint.per-file-ignores]
"**/tests/**/*.py" = [
  "SLF001", # allow private member access
]

[tool.ruff.lint.isort]
# To be consistent with skip-magic-trailing-comma = true
split-on-trailing-comma = false
