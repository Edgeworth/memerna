// Copyright 2022 E.
#include "compute/partition/partition.h"

#include <string>

#include "common_test.h"
#include "ctx/ctx.h"
#include "gtest/gtest.h"

namespace mrna::part {

class PartAlgTest : public testing::TestWithParam<ctx::CtxCfg::PartAlg> {
 public:
  PartResult Partition(const std::string& s) {
    return ctx::Ctx(t04, ctx::CtxCfg{.part_alg = GetParam()}).Partition(Primary::FromString(s));
  }
};

TEST_P(PartAlgTest, T04) {
  // TODO: Test these results. For now just run them.
  Partition("CCUCCGGG");
  Partition("CGGAAACGG");
  Partition("UGCAAAGCAA");
  Partition("GGGGAAACCCC");
  Partition("CUUAUAGUUAAGG");
  Partition("CCGAAGGGGCUGCGGCG");
  Partition("GCCAAGGCCCCACCCGGA");
  Partition("GGCCGAUGGCAGCGAUAGC");
  Partition("CUGAAACUGGAAACAGAAAUG");

  // Too slow for brute force:
  if (GetParam() == ctx::CtxCfg::PartAlg::BRUTE) return;
  Partition("CCGGGCCAGCCCGCUCCUACGGGGGGUC");
  Partition("CGCAGGGUCGGACCCGGGAGAACCGCGA");
  Partition("UACCCUGUUCAGCAUUGGAAAUUUCCUGGG");
  Partition("GCGCCCCAGUCGACGCUGAGCUCCUCUGCU");
  Partition("CCCAACGGAGUAACUUAGCGAAUAGCAGGGG");
  Partition("GGCGCACGCGUUAGCCGGGGAUCCACAGUGC");
  Partition("CCUGGAUAUUCCGAUGAGCACGUGCGAGGGC");
  Partition("UCCACGGCUCGACGGCGCACUUAGUGCGUGGG");
  Partition("GCGACCGGGGCUGGCUUGGUAAUGGUACUCCC");
  Partition("CGCUUAAGGCUAUUUGGCCGGAUCUCCAAGGCA");
  Partition("AAAUUCCGCUUGACAGCUCGCCACAACGGCAGGAC");
  Partition("CCGUAAAGUCGAACCAGACGUGCAUGAGCAAGCGG");
  Partition("GUCAUGCACUACUGCGAUUCAUACGGAAACAGACG");
  Partition("CACACUCCCGCAAAUGCCGAGUAUCAGAUUACUCCCCGGG");
  Partition("ACCGUCAGCUACCGCCGACUAUACUCUUUAGUCAGACGGGG");
  Partition("GCCAGACAAACACGAUUCUUUGAUAGUACUGACUAUUCUACAAUUAGGCC");
  Partition("GGCACAUACUGGGACAACAUUCGUUGGGUUCCCGGGUCGAACGGCAGCCG");
  Partition("UGGGGAAGUGCCGAUGCGGUACUAUUAUCCACUGUCUAUGGAUAAGUCCCCCGACCU");
  Partition("UUGAAAAGCGGUUCCGUUCAGUCCUACUCACACGUCCGUCACACAUUAUGCCGGUAGAUA");
  Partition("GAUGAGGGGAAACGGUGACUGGGACUCAGACAACGAUAGCAGCCAAAUAGGGAAGCUUCCUUC");
  Partition("AAAAACUAGCAUCUAGUGGGCUCCCGAUCGCCUCCUUCUCGUAUUACGUUAAUGCAACUCAAGUGAGCCCGU");
  Partition("GCGACCGGGGCUGGCUUGGUAAUGGUACUCCCCUGUCACGGGAGAGAAUGUGGGUUCAAAUCCCAUCGGUCGCGCCA");
}

INSTANTIATE_TEST_SUITE_P(PartAlgTest, PartAlgTest, testing::ValuesIn(ctx::CtxCfg::PART_ALGS));

}  // namespace mrna::part
