// Copyright 2022 Eliot Courtney.
#include "api/part.h"

#include <string>

#include "api/ctx/ctx.h"
#include "api/ctx/ctx_cfg.h"
#include "api/energy/model.h"
#include "common_test.h"
#include "gtest/gtest.h"
#include "model/primary.h"
#include "util/float.h"

namespace mrna::md::t04 {

class PartAlgTest : public testing::TestWithParam<CtxCfg::PartAlg> {
 public:
  static part::PartResult Partition(const erg::EnergyModelPtr& em, const std::string& s) {
    return Partition(em, Primary::FromSeq(s));
  }

  static part::PartResult Partition(const erg::EnergyModelPtr& em, const Primary& r) {
    return Ctx(em, CtxCfg{.part_alg = GetParam()}).Partition(r);
  }
};

#if ENERGY_PRECISION == 1

TEST_P(PartAlgTest, T04P1) {
  auto em = t04p1;

  EXPECT_REL_EQ(4.24816013829, Partition(em, "CCUCCGGG").part.q);
  EXPECT_REL_EQ(4.17979557042, Partition(em, "CGGAAACGG").part.q);
  EXPECT_REL_EQ(4.62750397465, Partition(em, "UGCAAAGCAA").part.q);
  EXPECT_REL_EQ(3122.66115009, Partition(em, "GGGGAAACCCC").part.q);
  EXPECT_REL_EQ(9.44718000805, Partition(em, "CUUAUAGUUAAGG").part.q);
  EXPECT_REL_EQ(930.051311983, Partition(em, "CCGAAGGGGCUGCGGCG").part.q);
  EXPECT_REL_EQ(196.739899801, Partition(em, "GCCAAGGCCCCACCCGGA").part.q);
  EXPECT_REL_EQ(3431.19128513, Partition(em, "GGCCGAUGGCAGCGAUAGC").part.q);
  EXPECT_REL_EQ(94.3008892348, Partition(em, "CUGAAACUGGAAACAGAAAUG").part.q);

  // Too slow for brute force:
  if (GetParam() == CtxCfg::PartAlg::BRUTE) return;
  EXPECT_REL_EQ(573963557.833, Partition(em, "CCGGGCCAGCCCGCUCCUACGGGGGGUC").part.q);
  EXPECT_REL_EQ(226979.219097, Partition(em, "CGCAGGGUCGGACCCGGGAGAACCGCGA").part.q);
  EXPECT_REL_EQ(812.38352375, Partition(em, "UACCCUGUUCAGCAUUGGAAAUUUCCUGGG").part.q);
  EXPECT_REL_EQ(19520.3202391, Partition(em, "GCGCCCCAGUCGACGCUGAGCUCCUCUGCU").part.q);
  EXPECT_REL_EQ(2003.03838946, Partition(em, "CCCAACGGAGUAACUUAGCGAAUAGCAGGGG").part.q);
  EXPECT_REL_EQ(23058.3336091, Partition(em, "GGCGCACGCGUUAGCCGGGGAUCCACAGUGC").part.q);
  EXPECT_REL_EQ(2060.71972602, Partition(em, "CCUGGAUAUUCCGAUGAGCACGUGCGAGGGC").part.q);
  EXPECT_REL_EQ(10731115.7024, Partition(em, "UCCACGGCUCGACGGCGCACUUAGUGCGUGGG").part.q);
  EXPECT_REL_EQ(443426.842362, Partition(em, "GCGACCGGGGCUGGCUUGGUAAUGGUACUCCC").part.q);
  EXPECT_REL_EQ(349171.530355, Partition(em, "CGCUUAAGGCUAUUUGGCCGGAUCUCCAAGGCA").part.q);
  EXPECT_REL_EQ(132689.019045, Partition(em, "AAAUUCCGCUUGACAGCUCGCCACAACGGCAGGAC").part.q);
  EXPECT_REL_EQ(803546.641993, Partition(em, "CCGUAAAGUCGAACCAGACGUGCAUGAGCAAGCGG").part.q);
  EXPECT_REL_EQ(2520.4316174, Partition(em, "GUCAUGCACUACUGCGAUUCAUACGGAAACAGACG").part.q);
  EXPECT_REL_EQ(643578.928228, Partition(em, "CACACUCCCGCAAAUGCCGAGUAUCAGAUUACUCCCCGGG").part.q);
  EXPECT_REL_EQ(1660031715.98, Partition(em, "ACCGUCAGCUACCGCCGACUAUACUCUUUAGUCAGACGGGG").part.q);
  EXPECT_REL_EQ(
      17711.6389272, Partition(em, "GCCAGACAAACACGAUUCUUUGAUAGUACUGACUAUUCUACAAUUAGGCC").part.q);
  EXPECT_REL_EQ(
      413455851608, Partition(em, "GGCACAUACUGGGACAACAUUCGUUGGGUUCCCGGGUCGAACGGCAGCCG").part.q);
  EXPECT_REL_EQ(2.57353505099e+16,
      Partition(em, "UGGGGAAGUGCCGAUGCGGUACUAUUAUCCACUGUCUAUGGAUAAGUCCCCCGACCU").part.q);
  EXPECT_REL_EQ(265269.030237,
      Partition(em, "UUGAAAAGCGGUUCCGUUCAGUCCUACUCACACGUCCGUCACACAUUAUGCCGGUAGAUA").part.q);
  EXPECT_REL_EQ(19869500930.9,
      Partition(em, "GAUGAGGGGAAACGGUGACUGGGACUCAGACAACGAUAGCAGCCAAAUAGGGAAGCUUCCUUC").part.q);
  EXPECT_REL_EQ(355492874401,
      Partition(em, "AAAAACUAGCAUCUAGUGGGCUCCCGAUCGCCUCCUUCUCGUAUUACGUUAAUGCAACUCAAGUGAGCCCGU")
          .part.q);
  EXPECT_REL_EQ(1.40477999326e+21,
      Partition(em, "GCGACCGGGGCUGGCUUGGUAAUGGUACUCCCCUGUCACGGGAGAGAAUGUGGGUUCAAAUCCCAUCGGUCGCGCCA")
          .part.q);
  EXPECT_REL_EQ(1.40477999326e+21, Partition(em, k16sHSapiens3).part.q);
}

#elif ENERGY_PRECISION == 2

TEST_P(PartAlgTest, T04P2) {
  auto em = t04p2;

  EXPECT_REL_EQ(4.06319224606, Partition(em, "CCUCCGGG").part.q);
  EXPECT_REL_EQ(3.99326566300, Partition(em, "CGGAAACGG").part.q);
  EXPECT_REL_EQ(5.00636522103, Partition(em, "UGCAAAGCAA").part.q);
  EXPECT_REL_EQ(2662.62888038, Partition(em, "GGGGAAACCCC").part.q);
  EXPECT_REL_EQ(10.7704965055, Partition(em, "CUUAUAGUUAAGG").part.q);
  EXPECT_REL_EQ(862.912629278, Partition(em, "CCGAAGGGGCUGCGGCG").part.q);
  EXPECT_REL_EQ(187.240327086, Partition(em, "GCCAAGGCCCCACCCGGA").part.q);
  EXPECT_REL_EQ(3427.00722809, Partition(em, "GGCCGAUGGCAGCGAUAGC").part.q);
  EXPECT_REL_EQ(93.019535283, Partition(em, "CUGAAACUGGAAACAGAAAUG").part.q);

  // Too slow for brute force:
  if (GetParam() == CtxCfg::PartAlg::BRUTE) return;
  EXPECT_REL_EQ(493466463.46, Partition(em, "CCGGGCCAGCCCGCUCCUACGGGGGGUC").part.q);
  EXPECT_REL_EQ(195295.14577, Partition(em, "CGCAGGGUCGGACCCGGGAGAACCGCGA").part.q);
  EXPECT_REL_EQ(778.887013804, Partition(em, "UACCCUGUUCAGCAUUGGAAAUUUCCUGGG").part.q);
  EXPECT_REL_EQ(20972.1314181, Partition(em, "GCGCCCCAGUCGACGCUGAGCUCCUCUGCU").part.q);
  EXPECT_REL_EQ(1909.72100698, Partition(em, "CCCAACGGAGUAACUUAGCGAAUAGCAGGGG").part.q);
  EXPECT_REL_EQ(23557.9099628, Partition(em, "GGCGCACGCGUUAGCCGGGGAUCCACAGUGC").part.q);
  EXPECT_REL_EQ(2064.1442172, Partition(em, "CCUGGAUAUUCCGAUGAGCACGUGCGAGGGC").part.q);
  EXPECT_REL_EQ(12061583.6231, Partition(em, "UCCACGGCUCGACGGCGCACUUAGUGCGUGGG").part.q);
  EXPECT_REL_EQ(472928.685895, Partition(em, "GCGACCGGGGCUGGCUUGGUAAUGGUACUCCC").part.q);
  EXPECT_REL_EQ(365289.11509, Partition(em, "CGCUUAAGGCUAUUUGGCCGGAUCUCCAAGGCA").part.q);
  EXPECT_REL_EQ(131826.62873, Partition(em, "AAAUUCCGCUUGACAGCUCGCCACAACGGCAGGAC").part.q);
  EXPECT_REL_EQ(870099.928286, Partition(em, "CCGUAAAGUCGAACCAGACGUGCAUGAGCAAGCGG").part.q);
  EXPECT_REL_EQ(3100.78279704, Partition(em, "GUCAUGCACUACUGCGAUUCAUACGGAAACAGACG").part.q);
  EXPECT_REL_EQ(615865.695815, Partition(em, "CACACUCCCGCAAAUGCCGAGUAUCAGAUUACUCCCCGGG").part.q);
  EXPECT_REL_EQ(1607489347.26, Partition(em, "ACCGUCAGCUACCGCCGACUAUACUCUUUAGUCAGACGGGG").part.q);
  EXPECT_REL_EQ(
      23894.2123244, Partition(em, "GCCAGACAAACACGAUUCUUUGAUAGUACUGACUAUUCUACAAUUAGGCC").part.q);
  EXPECT_REL_EQ(
      421630654129.0, Partition(em, "GGCACAUACUGGGACAACAUUCGUUGGGUUCCCGGGUCGAACGGCAGCCG").part.q);
  EXPECT_REL_EQ(2.41928077402e+16,
      Partition(em, "UGGGGAAGUGCCGAUGCGGUACUAUUAUCCACUGUCUAUGGAUAAGUCCCCCGACCU").part.q);
  EXPECT_REL_EQ(328476.821043,
      Partition(em, "UUGAAAAGCGGUUCCGUUCAGUCCUACUCACACGUCCGUCACACAUUAUGCCGGUAGAUA").part.q);
  EXPECT_REL_EQ(17510378182.8,
      Partition(em, "GAUGAGGGGAAACGGUGACUGGGACUCAGACAACGAUAGCAGCCAAAUAGGGAAGCUUCCUUC").part.q);
  EXPECT_REL_EQ(389940780119.0,
      Partition(em, "AAAAACUAGCAUCUAGUGGGCUCCCGAUCGCCUCCUUCUCGUAUUACGUUAAUGCAACUCAAGUGAGCCCGU")
          .part.q);
  EXPECT_REL_EQ(1.13634433186e+21,
      Partition(em, "GCGACCGGGGCUGGCUUGGUAAUGGUACUCCCCUGUCACGGGAGAGAAUGUGGGUUCAAAUCCCAUCGGUCGCGCCA")
          .part.q);
  fmt::print("{}\n", Partition(em, std::get<Primary>(k16sHSapiens3)).part.q);
  EXPECT_REL_EQ(1.40477999326e+21, Partition(em, std::get<Primary>(k16sHSapiens3)).part.q);
}

TEST_P(PartAlgTest, T12P2) {
  auto em = t12p2;

  EXPECT_REL_EQ(4.06319224606, Partition(em, "CCUCCGGG").part.q);
  EXPECT_REL_EQ(3.99326566300, Partition(em, "CGGAAACGG").part.q);
  EXPECT_REL_EQ(5.00636522103, Partition(em, "UGCAAAGCAA").part.q);
  EXPECT_REL_EQ(2662.62888038, Partition(em, "GGGGAAACCCC").part.q);
  EXPECT_REL_EQ(10.7704965055, Partition(em, "CUUAUAGUUAAGG").part.q);
  EXPECT_REL_EQ(862.912629278, Partition(em, "CCGAAGGGGCUGCGGCG").part.q);
  EXPECT_REL_EQ(187.240327086, Partition(em, "GCCAAGGCCCCACCCGGA").part.q);
  EXPECT_REL_EQ(3427.00722809, Partition(em, "GGCCGAUGGCAGCGAUAGC").part.q);
  EXPECT_REL_EQ(93.019535283, Partition(em, "CUGAAACUGGAAACAGAAAUG").part.q);

  // Too slow for brute force:
  if (GetParam() == CtxCfg::PartAlg::BRUTE) return;
  EXPECT_REL_EQ(493466463.46, Partition(em, "CCGGGCCAGCCCGCUCCUACGGGGGGUC").part.q);
  EXPECT_REL_EQ(195295.14577, Partition(em, "CGCAGGGUCGGACCCGGGAGAACCGCGA").part.q);
  EXPECT_REL_EQ(778.887013804, Partition(em, "UACCCUGUUCAGCAUUGGAAAUUUCCUGGG").part.q);
  EXPECT_REL_EQ(20972.1314181, Partition(em, "GCGCCCCAGUCGACGCUGAGCUCCUCUGCU").part.q);
  EXPECT_REL_EQ(1909.72100698, Partition(em, "CCCAACGGAGUAACUUAGCGAAUAGCAGGGG").part.q);
  EXPECT_REL_EQ(23557.9099628, Partition(em, "GGCGCACGCGUUAGCCGGGGAUCCACAGUGC").part.q);
  EXPECT_REL_EQ(2064.1442172, Partition(em, "CCUGGAUAUUCCGAUGAGCACGUGCGAGGGC").part.q);
  EXPECT_REL_EQ(12061583.6231, Partition(em, "UCCACGGCUCGACGGCGCACUUAGUGCGUGGG").part.q);
  EXPECT_REL_EQ(472928.685895, Partition(em, "GCGACCGGGGCUGGCUUGGUAAUGGUACUCCC").part.q);
  EXPECT_REL_EQ(365289.11509, Partition(em, "CGCUUAAGGCUAUUUGGCCGGAUCUCCAAGGCA").part.q);
  EXPECT_REL_EQ(131826.62873, Partition(em, "AAAUUCCGCUUGACAGCUCGCCACAACGGCAGGAC").part.q);
  EXPECT_REL_EQ(870099.928286, Partition(em, "CCGUAAAGUCGAACCAGACGUGCAUGAGCAAGCGG").part.q);
  EXPECT_REL_EQ(3100.78279704, Partition(em, "GUCAUGCACUACUGCGAUUCAUACGGAAACAGACG").part.q);
  EXPECT_REL_EQ(615865.695815, Partition(em, "CACACUCCCGCAAAUGCCGAGUAUCAGAUUACUCCCCGGG").part.q);
  EXPECT_REL_EQ(1607489347.26, Partition(em, "ACCGUCAGCUACCGCCGACUAUACUCUUUAGUCAGACGGGG").part.q);
  EXPECT_REL_EQ(
      23894.2123244, Partition(em, "GCCAGACAAACACGAUUCUUUGAUAGUACUGACUAUUCUACAAUUAGGCC").part.q);
  EXPECT_REL_EQ(
      421630654129.0, Partition(em, "GGCACAUACUGGGACAACAUUCGUUGGGUUCCCGGGUCGAACGGCAGCCG").part.q);
  EXPECT_REL_EQ(2.41928077402e+16,
      Partition(em, "UGGGGAAGUGCCGAUGCGGUACUAUUAUCCACUGUCUAUGGAUAAGUCCCCCGACCU").part.q);
  EXPECT_REL_EQ(328476.821043,
      Partition(em, "UUGAAAAGCGGUUCCGUUCAGUCCUACUCACACGUCCGUCACACAUUAUGCCGGUAGAUA").part.q);
  EXPECT_REL_EQ(17510378182.8,
      Partition(em, "GAUGAGGGGAAACGGUGACUGGGACUCAGACAACGAUAGCAGCCAAAUAGGGAAGCUUCCUUC").part.q);
  EXPECT_REL_EQ(389940780119.0,
      Partition(em, "AAAAACUAGCAUCUAGUGGGCUCCCGAUCGCCUCCUUCUCGUAUUACGUUAAUGCAACUCAAGUGAGCCCGU")
          .part.q);
  EXPECT_REL_EQ(1.13634433186e+21,
      Partition(em, "GCGACCGGGGCUGGCUUGGUAAUGGUACUCCCCUGUCACGGGAGAGAAUGUGGGUUCAAAUCCCAUCGGUCGCGCCA")
          .part.q);
  EXPECT_REL_EQ(1.40477999326e+21, Partition(em, std::get<Primary>(k16sHSapiens3)).part.q);
}

// NEWMODEL: Add tests here.

#endif

INSTANTIATE_TEST_SUITE_P(PartAlgTest, PartAlgTest, testing::ValuesIn(CtxCfg::PART_ALGS));

}  // namespace mrna::md::t04
