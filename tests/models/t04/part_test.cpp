// Copyright 2022 Eliot Courtney.
#include "api/part.h"

#include <string>

#include "api/ctx/ctx.h"
#include "api/ctx/ctx_cfg.h"
#include "api/energy/model.h"
#include "common_test.h"
#include "gtest/gtest.h"
#include "model/primary.h"
#include "util/float.h"

namespace mrna::md::t04 {

class PartAlgTest : public testing::TestWithParam<CtxCfg::PartAlg> {
 public:
  static part::PartResult Partition(const erg::EnergyModelPtr& em, const std::string& s) {
    return Partition(em, Primary::FromSeq(s));
  }

  static part::PartResult Partition(const erg::EnergyModelPtr& em, const Primary& r) {
    return Ctx(em, CtxCfg{.part_alg = GetParam()}).Partition(r);
  }
};

#if ENERGY_PRECISION == 1

TEST_P(PartAlgTest, T04P1) {
  auto em = t04p1;

  EXPECT_REL_EQ(
      FLT(4.2481601382949495665565296828679689667765375832), Partition(em, "CCUCCGGG").part.q);
  EXPECT_REL_EQ(
      FLT(4.17979557041608366287852107192666645517291810433), Partition(em, "CGGAAACGG").part.q);
  EXPECT_REL_EQ(
      FLT(4.62750397465096928509866459188973500341174374984), Partition(em, "UGCAAAGCAA").part.q);
  EXPECT_REL_EQ(
      FLT(3122.66115008916122674423382261602803687854854357), Partition(em, "GGGGAAACCCC").part.q);
  EXPECT_REL_EQ(FLT(9.44718000805199118395269282804335660230798127861),
      Partition(em, "CUUAUAGUUAAGG").part.q);
  EXPECT_REL_EQ(FLT(930.051311983052209666709379864276379348510979399),
      Partition(em, "CCGAAGGGGCUGCGGCG").part.q);
  EXPECT_REL_EQ(FLT(196.739899801268074338798758309195750804501201612),
      Partition(em, "GCCAAGGCCCCACCCGGA").part.q);
  EXPECT_REL_EQ(FLT(3431.19128512585938334129785636062228774823050418),
      Partition(em, "GGCCGAUGGCAGCGAUAGC").part.q);
  EXPECT_REL_EQ(FLT(94.3008892348264464511025477744977107828479729955),
      Partition(em, "CUGAAACUGGAAACAGAAAUG").part.q);

  // Too slow for brute force:
  if (GetParam() == CtxCfg::PartAlg::BRUTE) return;
  EXPECT_REL_EQ(FLT(573963557.832690101314804611565712243969839876608),
      Partition(em, "CCGGGCCAGCCCGCUCCUACGGGGGGUC").part.q);
  EXPECT_REL_EQ(FLT(226979.219096921172665125564673329771324145408152),
      Partition(em, "CGCAGGGUCGGACCCGGGAGAACCGCGA").part.q);
  EXPECT_REL_EQ(FLT(812.383523749713349970768190632670001171883879147),
      Partition(em, "UACCCUGUUCAGCAUUGGAAAUUUCCUGGG").part.q);
  EXPECT_REL_EQ(FLT(19520.3202391172281998883152194957928196468529852),
      Partition(em, "GCGCCCCAGUCGACGCUGAGCUCCUCUGCU").part.q);
  EXPECT_REL_EQ(FLT(2003.03838946282814030479317865110152744930660671),
      Partition(em, "CCCAACGGAGUAACUUAGCGAAUAGCAGGGG").part.q);
  EXPECT_REL_EQ(FLT(23058.3336091435782209696760380319112512888170753),
      Partition(em, "GGCGCACGCGUUAGCCGGGGAUCCACAGUGC").part.q);
  EXPECT_REL_EQ(FLT(2060.71972602168776467337879240845814018091207899),
      Partition(em, "CCUGGAUAUUCCGAUGAGCACGUGCGAGGGC").part.q);
  EXPECT_REL_EQ(FLT(10731115.7023640924024241047184987959200656768803),
      Partition(em, "UCCACGGCUCGACGGCGCACUUAGUGCGUGGG").part.q);
  EXPECT_REL_EQ(FLT(443426.84236219495995929904990764754412943693663),
      Partition(em, "GCGACCGGGGCUGGCUUGGUAAUGGUACUCCC").part.q);
  EXPECT_REL_EQ(FLT(349171.530355094625444533151609745244789447612351),
      Partition(em, "CGCUUAAGGCUAUUUGGCCGGAUCUCCAAGGCA").part.q);
  EXPECT_REL_EQ(FLT(132689.019044556375490017850862163999027602957435),
      Partition(em, "AAAUUCCGCUUGACAGCUCGCCACAACGGCAGGAC").part.q);
  EXPECT_REL_EQ(FLT(803546.641992943133871048721772712844519695820412),
      Partition(em, "CCGUAAAGUCGAACCAGACGUGCAUGAGCAAGCGG").part.q);
  EXPECT_REL_EQ(FLT(2520.43161740232401829233973384101843671743563485),
      Partition(em, "GUCAUGCACUACUGCGAUUCAUACGGAAACAGACG").part.q);
  EXPECT_REL_EQ(FLT(643578.928228185905419648713152576603855800599177),
      Partition(em, "CACACUCCCGCAAAUGCCGAGUAUCAGAUUACUCCCCGGG").part.q);
  EXPECT_REL_EQ(FLT(1660031715.98196937466554739068134244758781101395),
      Partition(em, "ACCGUCAGCUACCGCCGACUAUACUCUUUAGUCAGACGGGG").part.q);
  EXPECT_REL_EQ(FLT(17711.6389272494574341953125850175769175966289746),
      Partition(em, "GCCAGACAAACACGAUUCUUUGAUAGUACUGACUAUUCUACAAUUAGGCC").part.q);
  EXPECT_REL_EQ(FLT(413455851608.007014854697696998395303922733033517),
      Partition(em, "GGCACAUACUGGGACAACAUUCGUUGGGUUCCCGGGUCGAACGGCAGCCG").part.q);
  EXPECT_REL_EQ(FLT(25735350509881543.1432642249111720116326051872321),
      Partition(em, "UGGGGAAGUGCCGAUGCGGUACUAUUAUCCACUGUCUAUGGAUAAGUCCCCCGACCU").part.q);
  EXPECT_REL_EQ(FLT(265269.030237070990473213695638615156718492406518),
      Partition(em, "UUGAAAAGCGGUUCCGUUCAGUCCUACUCACACGUCCGUCACACAUUAUGCCGGUAGAUA").part.q);
  EXPECT_REL_EQ(FLT(19869500930.8524243679823577324638360720604214023),
      Partition(em, "GAUGAGGGGAAACGGUGACUGGGACUCAGACAACGAUAGCAGCCAAAUAGGGAAGCUUCCUUC").part.q);
  EXPECT_REL_EQ(FLT(355492874401.288593060501840506007538647116228473),
      Partition(em, "AAAAACUAGCAUCUAGUGGGCUCCCGAUCGCCUCCUUCUCGUAUUACGUUAAUGCAACUCAAGUGAGCCCGU")
          .part.q);
  EXPECT_REL_EQ(FLT(1404779993264957699657.30024473387442890744595273),
      Partition(em, "GCGACCGGGGCUGGCUUGGUAAUGGUACUCCCCUGUCACGGGAGAGAAUGUGGGUUCAAAUCCCAUCGGUCGCGCCA")
          .part.q);
  EXPECT_REL_EQ(FLT(7.19185047044768251505176115957271369407798113857e+68),
      Partition(em, std::get<Primary>(k16sHSapiens3)).part.q);
}

#elif ENERGY_PRECISION == 2

TEST_P(PartAlgTest, T04P2) {
  auto em = t04p2;

  EXPECT_REL_EQ(
      FLT(4.06319224605634966402591421970605379360495685951), Partition(em, "CCUCCGGG").part.q);
  EXPECT_REL_EQ(
      FLT(3.99326566300301791033216574191242303938854885947), Partition(em, "CGGAAACGG").part.q);
  EXPECT_REL_EQ(
      FLT(5.00636522103238861923548659614132904970282539598), Partition(em, "UGCAAAGCAA").part.q);
  EXPECT_REL_EQ(
      FLT(2662.62888037900558704265668051982251217213153673), Partition(em, "GGGGAAACCCC").part.q);
  EXPECT_REL_EQ(FLT(10.7704965054523662614541106882702612485328344832),
      Partition(em, "CUUAUAGUUAAGG").part.q);
  EXPECT_REL_EQ(FLT(862.912629277823361070099951004283878597752822601),
      Partition(em, "CCGAAGGGGCUGCGGCG").part.q);
  EXPECT_REL_EQ(FLT(187.240327086207995339175981065221999797886386151),
      Partition(em, "GCCAAGGCCCCACCCGGA").part.q);
  EXPECT_REL_EQ(FLT(3427.00722809050708509806369289302077227010570591),
      Partition(em, "GGCCGAUGGCAGCGAUAGC").part.q);
  EXPECT_REL_EQ(FLT(93.0195352829696190510822680132395052486188082434),
      Partition(em, "CUGAAACUGGAAACAGAAAUG").part.q);

  // Too slow for brute force:
  if (GetParam() == CtxCfg::PartAlg::BRUTE) return;
  EXPECT_REL_EQ(FLT(493466463.460090471178453336059607111928201974103),
      Partition(em, "CCGGGCCAGCCCGCUCCUACGGGGGGUC").part.q);
  EXPECT_REL_EQ(FLT(195295.145769532448331248364128063229631392206704),
      Partition(em, "CGCAGGGUCGGACCCGGGAGAACCGCGA").part.q);
  EXPECT_REL_EQ(FLT(778.887013803751109346049438635434712714925557828),
      Partition(em, "UACCCUGUUCAGCAUUGGAAAUUUCCUGGG").part.q);
  EXPECT_REL_EQ(FLT(20972.1314181301922813213059400630166895354083249),
      Partition(em, "GCGCCCCAGUCGACGCUGAGCUCCUCUGCU").part.q);
  EXPECT_REL_EQ(FLT(1909.72100697901342342903299165543544163601010886),
      Partition(em, "CCCAACGGAGUAACUUAGCGAAUAGCAGGGG").part.q);
  EXPECT_REL_EQ(FLT(23557.9099628491620422154197373835625123010841564),
      Partition(em, "GGCGCACGCGUUAGCCGGGGAUCCACAGUGC").part.q);
  EXPECT_REL_EQ(FLT(2064.14421719743160476019865325926718813173089323),
      Partition(em, "CCUGGAUAUUCCGAUGAGCACGUGCGAGGGC").part.q);
  EXPECT_REL_EQ(FLT(12061583.623138764616732901677311376436227481102),
      Partition(em, "UCCACGGCUCGACGGCGCACUUAGUGCGUGGG").part.q);
  EXPECT_REL_EQ(FLT(472928.68589511769633400779983743439991805765918),
      Partition(em, "GCGACCGGGGCUGGCUUGGUAAUGGUACUCCC").part.q);
  EXPECT_REL_EQ(FLT(365289.1150902723140126719414570191901353630362),
      Partition(em, "CGCUUAAGGCUAUUUGGCCGGAUCUCCAAGGCA").part.q);
  EXPECT_REL_EQ(FLT(131826.628730103371030811591823814109862321545414),
      Partition(em, "AAAUUCCGCUUGACAGCUCGCCACAACGGCAGGAC").part.q);
  EXPECT_REL_EQ(FLT(870099.928286423586260255675759305796920953290399),
      Partition(em, "CCGUAAAGUCGAACCAGACGUGCAUGAGCAAGCGG").part.q);
  EXPECT_REL_EQ(FLT(3100.7827970399234908862087515270052528699274237),
      Partition(em, "GUCAUGCACUACUGCGAUUCAUACGGAAACAGACG").part.q);
  EXPECT_REL_EQ(FLT(615865.695815302001470348453818047061053369778275),
      Partition(em, "CACACUCCCGCAAAUGCCGAGUAUCAGAUUACUCCCCGGG").part.q);
  EXPECT_REL_EQ(FLT(1607489347.25671336028894279167473096685947839885),
      Partition(em, "ACCGUCAGCUACCGCCGACUAUACUCUUUAGUCAGACGGGG").part.q);
  EXPECT_REL_EQ(FLT(23894.2123243934496994030706935993404553748402114),
      Partition(em, "GCCAGACAAACACGAUUCUUUGAUAGUACUGACUAUUCUACAAUUAGGCC").part.q);
  EXPECT_REL_EQ(FLT(421630654128.633374601459584284515132203452776267),
      Partition(em, "GGCACAUACUGGGACAACAUUCGUUGGGUUCCCGGGUCGAACGGCAGCCG").part.q);
  EXPECT_REL_EQ(FLT(24192807740162195.3830648554350725130649025539822),
      Partition(em, "UGGGGAAGUGCCGAUGCGGUACUAUUAUCCACUGUCUAUGGAUAAGUCCCCCGACCU").part.q);
  EXPECT_REL_EQ(FLT(328476.821042901399605570819891707763060879930671),
      Partition(em, "UUGAAAAGCGGUUCCGUUCAGUCCUACUCACACGUCCGUCACACAUUAUGCCGGUAGAUA").part.q);
  EXPECT_REL_EQ(FLT(17510378182.7605460289508983654126373364732188366),
      Partition(em, "GAUGAGGGGAAACGGUGACUGGGACUCAGACAACGAUAGCAGCCAAAUAGGGAAGCUUCCUUC").part.q);
  EXPECT_REL_EQ(FLT(389940780119.080264722824346294116431676188922855),
      Partition(em, "AAAAACUAGCAUCUAGUGGGCUCCCGAUCGCCUCCUUCUCGUAUUACGUUAAUGCAACUCAAGUGAGCCCGU")
          .part.q);
  EXPECT_REL_EQ(FLT(1136344331856046205840.00692364220342496730331896),
      Partition(em, "GCGACCGGGGCUGGCUUGGUAAUGGUACUCCCCUGUCACGGGAGAGAAUGUGGGUUCAAAUCCCAUCGGUCGCGCCA")
          .part.q);
  EXPECT_REL_EQ(FLT(1.32920533036863587979235578444457912345221528224e+69),
      Partition(em, std::get<Primary>(k16sHSapiens3)).part.q);
}

TEST_P(PartAlgTest, T12P2) {
  auto em = t12p2;

  EXPECT_REL_EQ(
      FLT(4.06569633368939134129842956017929466372263904011), Partition(em, "CCUCCGGG").part.q);
  EXPECT_REL_EQ(
      FLT(3.99326566300301791033216574191242303938854885947), Partition(em, "CGGAAACGG").part.q);
  EXPECT_REL_EQ(
      FLT(5.00636522103238861923548659614132904970282539598), Partition(em, "UGCAAAGCAA").part.q);
  EXPECT_REL_EQ(
      FLT(2662.62888037900558704265668051982251217213153673), Partition(em, "GGGGAAACCCC").part.q);
  EXPECT_REL_EQ(FLT(10.7725113515246954473359173628025656149572064375),
      Partition(em, "CUUAUAGUUAAGG").part.q);
  EXPECT_REL_EQ(FLT(862.943962196093310745056203419606684478691335422),
      Partition(em, "CCGAAGGGGCUGCGGCG").part.q);
  EXPECT_REL_EQ(FLT(187.240327086207995339175981065221999797886386151),
      Partition(em, "GCCAAGGCCCCACCCGGA").part.q);
  EXPECT_REL_EQ(FLT(3427.26623805775782613806881524899768814998387824),
      Partition(em, "GGCCGAUGGCAGCGAUAGC").part.q);
  EXPECT_REL_EQ(FLT(95.4259133641153583215580108909655376595181029066),
      Partition(em, "CUGAAACUGGAAACAGAAAUG").part.q);

  // Too slow for brute force:
  if (GetParam() == CtxCfg::PartAlg::BRUTE) return;
  EXPECT_REL_EQ(FLT(489204211.172288765757951208913067385219599497233),
      Partition(em, "CCGGGCCAGCCCGCUCCUACGGGGGGUC").part.q);
  EXPECT_REL_EQ(FLT(196792.657859828130964152987286121184091154876082),
      Partition(em, "CGCAGGGUCGGACCCGGGAGAACCGCGA").part.q);
  EXPECT_REL_EQ(FLT(897.710727948927922230017781640818649292773813356),
      Partition(em, "UACCCUGUUCAGCAUUGGAAAUUUCCUGGG").part.q);
  EXPECT_REL_EQ(FLT(23556.037273596543238637804907963726051212682293),
      Partition(em, "GCGCCCCAGUCGACGCUGAGCUCCUCUGCU").part.q);
  EXPECT_REL_EQ(FLT(1553.88384200725747011924484669589807897585491528),
      Partition(em, "CCCAACGGAGUAACUUAGCGAAUAGCAGGGG").part.q);
  EXPECT_REL_EQ(FLT(16618.3528695855870293720660123018654154051324676),
      Partition(em, "GGCGCACGCGUUAGCCGGGGAUCCACAGUGC").part.q);
  EXPECT_REL_EQ(FLT(2899.21019569350573436244969076561564790427026364),
      Partition(em, "CCUGGAUAUUCCGAUGAGCACGUGCGAGGGC").part.q);
  EXPECT_REL_EQ(FLT(16481469.9406490494218993261947318867812898724102),
      Partition(em, "UCCACGGCUCGACGGCGCACUUAGUGCGUGGG").part.q);
  EXPECT_REL_EQ(FLT(183809.505090056167446426730438360547384599180191),
      Partition(em, "GCGACCGGGGCUGGCUUGGUAAUGGUACUCCC").part.q);
  EXPECT_REL_EQ(FLT(315217.379815197878962264939995554706029844330905),
      Partition(em, "CGCUUAAGGCUAUUUGGCCGGAUCUCCAAGGCA").part.q);
  EXPECT_REL_EQ(FLT(136782.310242449217885421097202395872293948779207),
      Partition(em, "AAAUUCCGCUUGACAGCUCGCCACAACGGCAGGAC").part.q);
  EXPECT_REL_EQ(FLT(998772.075415194255787195266843532020910195867875),
      Partition(em, "CCGUAAAGUCGAACCAGACGUGCAUGAGCAAGCGG").part.q);
  EXPECT_REL_EQ(FLT(4050.20866030789424731091253329588625280168991383),
      Partition(em, "GUCAUGCACUACUGCGAUUCAUACGGAAACAGACG").part.q);
  EXPECT_REL_EQ(FLT(652202.893589822942241087247987863554325724805463),
      Partition(em, "CACACUCCCGCAAAUGCCGAGUAUCAGAUUACUCCCCGGG").part.q);
  EXPECT_REL_EQ(FLT(1607661178.58824529437331316718864992970149110709),
      Partition(em, "ACCGUCAGCUACCGCCGACUAUACUCUUUAGUCAGACGGGG").part.q);
  EXPECT_REL_EQ(FLT(19520.0287324784846509305171351401669661569973331),
      Partition(em, "GCCAGACAAACACGAUUCUUUGAUAGUACUGACUAUUCUACAAUUAGGCC").part.q);
  EXPECT_REL_EQ(FLT(192434263471.247181209898793008576358585303946576),
      Partition(em, "GGCACAUACUGGGACAACAUUCGUUGGGUUCCCGGGUCGAACGGCAGCCG").part.q);
  EXPECT_REL_EQ(FLT(5904160855201177.82254298470635777088315787175804),
      Partition(em, "UGGGGAAGUGCCGAUGCGGUACUAUUAUCCACUGUCUAUGGAUAAGUCCCCCGACCU").part.q);
  EXPECT_REL_EQ(FLT(366659.346588826179939401256407891574623803820985),
      Partition(em, "UUGAAAAGCGGUUCCGUUCAGUCCUACUCACACGUCCGUCACACAUUAUGCCGGUAGAUA").part.q);
  EXPECT_REL_EQ(FLT(25856485084.7335874218194327394295914555353676429),
      Partition(em, "GAUGAGGGGAAACGGUGACUGGGACUCAGACAACGAUAGCAGCCAAAUAGGGAAGCUUCCUUC").part.q);
  EXPECT_REL_EQ(FLT(132282223107.345701927554859689686150462557082933),
      Partition(em, "AAAAACUAGCAUCUAGUGGGCUCCCGAUCGCCUCCUUCUCGUAUUACGUUAAUGCAACUCAAGUGAGCCCGU")
          .part.q);
  EXPECT_REL_EQ(FLT(5533580375879926303436.05887760426233887943708643),
      Partition(em, "GCGACCGGGGCUGGCUUGGUAAUGGUACUCCCCUGUCACGGGAGAGAAUGUGGGUUCAAAUCCCAUCGGUCGCGCCA")
          .part.q);
  EXPECT_REL_EQ(FLT(5.66869003503456655039254654004050526353333205129e+68),
      Partition(em, std::get<Primary>(k16sHSapiens3)).part.q);
}

// NEWMODEL: Add tests here.

#endif

INSTANTIATE_TEST_SUITE_P(PartAlgTest, PartAlgTest, testing::ValuesIn(CtxCfg::PART_ALGS));

}  // namespace mrna::md::t04
