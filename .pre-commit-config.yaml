repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.2.0
    hooks:
      - id: check-ast # check python syntax
      - id: check-docstring-first # check for docstring after code
      - id: check-executables-have-shebangs # check for shebang
      - id: check-shebang-scripts-are-executable # check for executable shebang
        exclude_types: [rust] # Rust files sometimes have #! at the beginning.
      - id: check-merge-conflict # check for merge conflict markers
      - id: check-json # check json syntax
      - id: check-symlinks # check for broken symlinks
      - id: check-toml # check toml syntax
      - id: check-xml # check xml syntax
      - id: check-yaml # check yaml syntax
      - id: check-yaml # check yaml syntax
      - id: debug-statements # checks for debugger imports and py37+ `breakpoint()` calls in python source.
      - id: destroyed-symlinks # detects symlinks which became the files they were pointing to
      - id: detect-private-key # detects the presence of private keys.
      - id: end-of-file-fixer # ensures that a file is either empty, or ends with one newline.
      - id: fix-byte-order-marker # removes utf-8 byte order marker.
      - id: mixed-line-ending # replaces or checks mixed line ending.
      - id: requirements-txt-fixer # sorts entries in requirements.txt.
      - id: trailing-whitespace # trims trailing whitespace.
  # Misc hooks:
  - repo: https://github.com/cmake-lint/cmake-lint
    rev: 1.4.2
    hooks:
      - id: cmakelint
        args: [--linelength=100]
        exclude: ^cmake/FindMPFR.cmake$
  # Python related hooks:
  - repo: https://github.com/psf/black
    rev: 22.3.0
    hooks:
      - id: black
        args: [--line-length=100, -tpy310]
  - repo: https://github.com/asottile/pyupgrade
    rev: v2.32.0
    hooks:
      - id: pyupgrade
        args: [--py310-plus]
  - repo: https://github.com/asottile/add-trailing-comma
    rev: v2.2.3
    hooks:
      - id: add-trailing-comma
        args: [--py36-plus]
  - repo: https://github.com/sqlalchemyorg/zimports/
    rev: v0.5.0
    hooks:
      - id: zimports
  - repo: https://github.com/asottile/blacken-docs
    rev: v1.12.1
    hooks:
      - id: blacken-docs
        args: [--line-length=100, -t=py310]
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v0.942
    hooks:
      - id: mypy
        args: [
            --disallow-untyped-defs, # Require type hints
            --no-implicit-optional, # Disallow implicit optional e.g. arg: str = None
            --check-untyped-defs, # Check bodies of functions without type annotations too
            --warn-return-any, # Warn about returning Any from a function annotated to not return it
            --warn-unused-ignores, # Warn about unused ignore annotations
            --show-error-codes,
          ]
        additional_dependencies:
          [click, click_log, cloup, torch, torchtext, torchvision]
  - repo: https://github.com/PyCQA/prospector # runs pylint etc with good profiles
    rev: 1.7.7
    hooks:
      - id: prospector
        args: [--max-line-length=100]
        additional_dependencies:
          [click, click_log, cloup, torch, torchtext, torchvision]
  # C++ related hooks:
  - repo: https://github.com/pocc/pre-commit-hooks
    rev: v1.3.5
    hooks:
      - id: clang-format
        args: [-i] # modify in place
      - id: cppcheck
        args: [
            -q,
            --error-exitcode=1,
            --enable=all,
            --suppress=assertWithSideEffect,
            --suppress=missingIncludeSystem,
            --suppress=syntaxError,
            --suppress=unmatchedSuppression,
            --suppress=unreadVariable, # e.g. variable initialized then set in if/else
            --suppress=unusedFunction,
            --suppress=useStlAlgorithm,
            --project=compile_commands.json,
            -iextern,
            -igoogletest-src,
            "--suppress=*:*/googletest-src/*",
          ]
      - id: cpplint
        args:
          [
            --linelength=100,
            --verbose=0,
            "--filter=-readability/todo,-readability/fn_size,-build/c++11,-build/include_subdir",
            --root=src,
          ]
  - repo: local # using local clang-tidy because of bugs in pocc. uses .clang-tidy at top of repo
    hooks:
      - id: clang-tidy
        name: clang-tidy
        description: Statically analyse files with clang-tidy.
        entry: clang-tidy --fix-errors
        language: system
        types_or: [c, c++, objective-c, objective-c++]
